{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","classNames","completed","TodoList","todos","map","username","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","trim","Todo","sort","a","b","push","addTodo","htmlFor","type","value","onChange","target","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30eaf669.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../type/User';\n// import './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../type/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', { 'TodoInfo--completed': todo.completed })\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (<UserInfo user={user} />)}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { Todo } from '../../type/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport React, { useState } from 'react';\nimport { TodoList } from './components/TodoList/TodoList';\n\nimport { User } from './type/User';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nfunction chooseKey() {\n  const maxKey = [...todos].sort((a, b) => b.id - a.id);\n\n  return maxKey[0].id + 1;\n}\n\nconst addTodo = (title: string, userId: number): void => {\n  const Todo = {\n    id: chooseKey(),\n    title,\n    userId,\n    completed: false,\n    user: getUser(userId),\n  };\n\n  todos.push(Todo);\n};\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setTitle(value);\n\n    if (value.trim() !== '') {\n      setErrorTitle(false);\n    }\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setUserId(value);\n\n    if (value !== '0') {\n      setErrorUser(false);\n    }\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() && userId === '0') {\n      setErrorUser(true);\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (!title.trim()) {\n      setErrorTitle(true);\n\n      return;\n    }\n\n    if (userId === '0') {\n      setErrorUser(true);\n\n      return;\n    }\n\n    addTodo(title, +userId);\n    setTitle('');\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitle}\n            placeholder=\"Enter a title\"\n          />\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <span>Choose a user: </span>\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {errorUser && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}